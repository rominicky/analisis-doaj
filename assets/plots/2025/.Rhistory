theme(legend.position = "under")
# Graficar el mapa de Argentina con puntos de las provincias
ggplot(data = mapa_argentina) +
geom_sf(fill = "lightgrey") +  # agregamos el Mapa de fondo con color
geom_sf(data = df_sf, aes(size = `Personas.en.situación.de.calle..vía.pública.`, #agregamos los puntos en el mapa de cada provincia
color = `Personas.en.situación.de.calle..vía.pública.`),
alpha = 0.7) + #le indicamos la transparencia de los puntos
scale_size_continuous(range = c(1, 10), name = "Personas en Situación de Calle") + #rango de los circulos
scale_color_gradient(low = "violet", high = "lightgreen", name = "Personas en Situación de Calle") +
labs(title = "Provincias de Argentina con Personas en Situación de Calle",
x = "Longitud", y = "Latitud") +
theme_minimal() +
theme(legend.position = "Under")
# Graficar el mapa de Argentina con puntos de las provincias
ggplot(data = mapa_argentina) +
geom_sf(fill = "lightgrey") +  # agregamos el Mapa de fondo con color
geom_sf(data = df_sf, aes(size = `Personas.en.situación.de.calle..vía.pública.`, #agregamos los puntos en el mapa de cada provincia
color = `Personas.en.situación.de.calle..vía.pública.`),
alpha = 0.7) + #le indicamos la transparencia de los puntos
scale_size_continuous(range = c(1, 10), name = "Personas en Situación de Calle") + #rango de los circulos
scale_color_gradient(low = "violet", high = "lightgreen", name = "Personas en Situación de Calle") +
labs(title = "Provincias de Argentina con Personas en Situación de Calle",
x = "Longitud", y = "Latitud") +
theme_minimal() +
theme(legend.position = "Right")
# Graficar el mapa de Argentina con puntos de las provincias
ggplot(data = mapa_argentina) +
geom_sf(fill = "lightgrey") +  # agregamos el Mapa de fondo con color
geom_sf(data = df_sf, aes(size = `Personas.en.situación.de.calle..vía.pública.`, #agregamos los puntos en el mapa de cada provincia
color = `Personas.en.situación.de.calle..vía.pública.`),
alpha = 0.7) + #le indicamos la transparencia de los puntos
scale_size_continuous(range = c(1, 10), name = "Personas en Situación de Calle") + #rango de los circulos
scale_color_gradient(low = "violet", high = "lightgreen", name = "Personas en Situación de Calle") +
labs(title = "Provincias de Argentina con Personas en Situación de Calle",
x = "Longitud", y = "Latitud") +
theme_minimal() +
theme(legend.position = "right")
# Graficar el mapa de Argentina con puntos de las provincias
ggplot(data = mapa_argentina) +
geom_sf(fill = "lightgrey") +  # agregamos el Mapa de fondo con color
geom_sf(data = df_sf, aes(size = `Personas.en.situación.de.calle..vía.pública.`, #agregamos los puntos en el mapa de cada provincia
color = `Personas.en.situación.de.calle..vía.pública.`),
alpha = 0.7) + #le indicamos la transparencia de los puntos
scale_size_continuous(range = c(1, 10), name = "Personas en Situación de Calle") + #rango de los circulos
scale_color_gradient(low = "violet", high = "lightgreen", name = "Personas en Situación de Calle") +
labs(title = "Provincias de Argentina con Personas en Situación de Calle",
x = "Longitud", y = "Latitud") +
theme_minimal() +
theme(legend.position = "left")
#- almacenamos en el objeto "path_wd" la ruta de mi directorio de trabajo
rm(list = ls())
getwd()
setwd("C:/git/analisis-doaj/assets/script")
getwd()
path_wd <- getwd()
library("echarts4r")
library(treemapify)
library(tidyverse)
library(tidytext)
library(dplyr)
library(ggplot2)
library(gapminder)
library(magrittr) #algunos los vuelvo a llamar por error al correr el script
library(tidyselect)
library(purrr)
library(readr)
library(rio)
#library(xlsx) ver porque necesita java
library(stringr)
library(highcharter)
library(webshot)
library(htmlwidgets)
library(plotly)
#journal <- read.csv(url("https://raw.githubusercontent.com/rominicky/analisis-doaj/main/journalcsv__doaj_20240404_1721_utf8.csv?token=GHSAT0AAAAAACPRMIVAKVUR2TLJYTL5B4QOZQVK33A"))
journal <- read.csv("C:/git/analisis-doaj/assets/datos/2025_journalcsv.csv")
as_tibble(journal)
colnames(journal)
journal.select <- journal%>% select(Journal.title, Country.of.publisher, Languages.in.which.the.journal.accepts.manuscripts, Journal.license, Publisher, Review.process, Subjects, APC, Persistent.article.identifiers, Keywords)
journal.select <- journal.select %>%
rename(title = Journal.title) %>%
rename(country = Country.of.publisher) %>%
rename(language = Languages.in.which.the.journal.accepts.manuscripts) %>%
rename (license = Journal.license) %>%
rename (Review = Review.process) %>%
rename (Ids = Persistent.article.identifiers)
journal.select$Subjects <- str_extract(journal.select$Subjects, "\\w+(?:[^\\w]+\\w+){0,1}")
#elimino los signos de puntuación
journal.select$Subjects <- gsub("[[:punct:]]", "", journal.select$Subjects)
journal.select <- journal.select %>%
mutate(Subjects = str_trim(Subjects)) %>%
mutate(Subjects = sapply(Subjects, function(x) {
words <- str_split(x, "\\s{2,}|,|\\s*\\band\\b\\s*|\\s+")[[1]]  # dividir por palabras, "and", comas, o espacios
words <- unique(words[words != ""])  # eliminar vacíos y duplicados
paste(words, collapse = " ")
}))
# Crear una función para ordenar los idiomas en una lista
sort_languages <- function(language_list) {
sorted_languages <- sort(unlist(strsplit(language_list, ", ")))
#sorted_languages <- unique(sorted_languages)  # Eliminar duplicados
return(paste(sorted_languages, collapse = ", "))
}
# Aplicar la función a cada celda en la columna 'language'
journal.select$language <- sapply(journal.select$language, sort_languages)
# Crear una función para ordenar los ids
sort_ids <- function(ids_list) {
sorted_ids <- sort(unlist(strsplit(ids_list, ", ")))
#sorted_languages <- unique(sorted_languages)  # Eliminar duplicados
return(paste(sorted_ids, collapse = ", "))
}
# Aplicar la función a cada celda en la columna 'language'
journal.select$Ids <- sapply(journal.select$Ids, sort_ids)
porcen_journal <- journal.select %>%
group_by(country)%>%
count()%>%
ungroup()%>%
mutate(percentage= n /sum(n)*100) %>%
bind_rows(data.frame(country = "Total", n = NA, percentage = sum(.$percentage)))
# Filtrar los países de América Latina
selected_countries <- c("Brazil", "Argentina", "Mexico", "Colombia", "Ecuador", "Costa Rica", "Bolivia, Plurinational State of", "Dominican Republic", "El Salvador", "Guatemala", "
Honduras", "Nicaragua", "Panama", "Chile", "Paraguay", "Peru", "Uruguay", "Venezuela, Bolivarian Republic of")
filtered_data <- porcen_journal %>% filter(country %in% selected_countries)
View(filtered_data)
#américa latina
paises_total <- hchart(
filtered_data,
type = "pie",
hcaes(x = country, y = percentage),
dataLabels = list(enabled = FALSE),  # Deshabilitar etiquetas de datos
showInLegend = TRUE
) %>%
hc_title(text = "<b>Porcentaje de países de América Latina</b>") %>%
hc_subtitle(text = "<i>Países de América Latina respecto al total de los países del mundo</i>") %>%
hc_exporting(
enabled = TRUE, # Habilitar exportación
filename = "paises_total"
) %>%
hc_plotOptions(
pie = list(
allowPointSelect = TRUE,
cursor = "pointer"
)
) %>%
hc_legend(
enabled = TRUE,
layout = "horizontal",
align = "center",
verticalAlign = "bottom",
y = 8,  # Ajustar la posición vertical de la leyenda
itemStyle = list(fontSize = "12px", fontWeight = "normal"),
labelFormat = "{name}: {percentage:.1f}%"
)%>%
hc_credits( #https://api.highcharts.com/highcharts/
enabled = TRUE,
text = "Citar como: Romina De León y Gimena del Rio, 2025. Análisis de revistas latinoamericanas en DOAJ.",
href = "https://github.com/rominicky/analisis-doaj",
itemStyle = list(fontSize = "8px", fontWeight = "normal"),
position = list(align = "left", x = 10, y = -5)  # <-- Esto alinea a la izquierda
)
saveWidget(paises_total, file = "paises_total-interactivo.html")
View(porcen_journal)
View(filtered_data)
#américa latina
paises_total <- hchart(
#américa latina
paises_total <- hchart(
filtered_data,
type = "pie",
hcaes(x = country, y = percentage),
dataLabels = list(enabled = TRUE),  # Deshabilitar etiquetas de datos
showInLegend = TRUE) %>%
hc_title(text = paste0("<b>Porcentaje de las", sum(filtered_data$n), "publicaciones de América Latina</b>")) %>%
hc_subtitle(text = "<i>Países de América Latina respecto al total de los países del mundo</i>") %>%
hc_exporting(
enabled = TRUE, # Habilitar exportación
filename = "paises_total"
) %>%
hc_plotOptions(
pie = list(
allowPointSelect = TRUE,
cursor = "pointer"
)
) %>%
hc_legend(
enabled = TRUE,
layout = "horizontal",
align = "center",
verticalAlign = "bottom",
y = 8,  # Ajustar la posición vertical de la leyenda
itemStyle = list(fontSize = "12px", fontWeight = "normal"),
labelFormat = "{name}: {percentage:.1f}%"
)%>%
hc_credits( #https://api.highcharts.com/highcharts/
enabled = TRUE,
text = "Citar como: Romina De León y Gimena del Rio, 2025. Análisis de revistas latinoamericanas en DOAJ.",
href = "https://github.com/rominicky/analisis-doaj",
itemStyle = list(fontSize = "8px", fontWeight = "normal"),
position = list(align = "left", x = 10, y = -5)  # <-- Esto alinea a la izquierda
)
#américa latina
paises_total <- hchart(
#américa latina
paises_total <- hchart(
filtered_data,
type = "pie",
hcaes(x = country, y = percentage),
dataLabels = list(enabled = TRUE),  # Deshabilitar etiquetas de datos
showInLegend = TRUE
) %>%
hc_title(text = paste0(
"<b>Porcentaje de las </b>",
sum(filtered_data$n),
" publicaciones en América Latina</span>"
)) %>%
hc_subtitle(text = "<i>Países de América Latina respecto al total de los países del mundo</i>") %>%
hc_exporting(
enabled = TRUE, # Habilitar exportación
filename = "paises_total"
) %>%
hc_plotOptions(
pie = list(
allowPointSelect = TRUE,
cursor = "pointer"
)
) %>%
hc_legend(
enabled = TRUE,
layout = "horizontal",
align = "center",
verticalAlign = "bottom",
y = 8,  # Ajustar la posición vertical de la leyenda
itemStyle = list(fontSize = "12px", fontWeight = "normal"),
labelFormat = "{name}: {percentage:.1f}%"
)%>%
hc_credits( #https://api.highcharts.com/highcharts/
enabled = TRUE,
text = "Citar como: Romina De León y Gimena del Rio, 2025. Análisis de revistas latinoamericanas en DOAJ.",
href = "https://github.com/rominicky/analisis-doaj",
itemStyle = list(fontSize = "8px", fontWeight = "normal"),
position = list(align = "left", x = 10, y = -5)  # <-- Esto alinea a la izquierda
)
saveWidget(paises_total, file = "paises_total-interactivo.html")
#américa latina
paises_total <- hchart(
filtered_data,
type = "pie",
hcaes(x = country, y = percentage),
dataLabels = list(enabled = TRUE),  # Deshabilitar etiquetas de datos
showInLegend = TRUE
) %>%
hc_title(text = paste0(
"<b>Porcentaje de las </b>",
sum(filtered_data$n),
"<b>publicaciones en América Latina</b>"
)) %>%
hc_subtitle(text = "<i>Países de América Latina respecto al total de los países del mundo</i>") %>%
hc_exporting(
enabled = TRUE, # Habilitar exportación
filename = "paises_total"
) %>%
hc_plotOptions(
pie = list(
allowPointSelect = TRUE,
cursor = "pointer"
)
) %>%
hc_legend(
enabled = TRUE,
layout = "horizontal",
align = "center",
verticalAlign = "bottom",
y = 8,  # Ajustar la posición vertical de la leyenda
itemStyle = list(fontSize = "12px", fontWeight = "normal"),
labelFormat = "{name}: {percentage:.1f}%"
)%>%
hc_credits( #https://api.highcharts.com/highcharts/
enabled = TRUE,
text = "Citar como: Romina De León y Gimena del Rio, 2025. Análisis de revistas latinoamericanas en DOAJ.",
href = "https://github.com/rominicky/analisis-doaj",
itemStyle = list(fontSize = "8px", fontWeight = "normal"),
position = list(align = "left", x = 10, y = -5)  # <-- Esto alinea a la izquierda
)
saveWidget(paises_total, file = "paises_total-interactivo.html")
#américa latina
paises_total <- hchart(
filtered_data,
type = "pie",
hcaes(x = country, y = percentage),
dataLabels = list(enabled = TRUE),  # Deshabilitar etiquetas de datos
showInLegend = TRUE
) %>%
hc_title(text = paste0(
"<b>Porcentaje de las </b>",
sum(filtered_data$n),
"<b> publicaciones en América Latina</b>"
)) %>%
hc_subtitle(text = "<i>Países de América Latina respecto al total de los países del mundo</i>") %>%
hc_exporting(
enabled = TRUE, # Habilitar exportación
filename = "paises_total"
) %>%
hc_plotOptions(
pie = list(
allowPointSelect = TRUE,
cursor = "pointer"
)
) %>%
hc_legend(
enabled = TRUE,
layout = "horizontal",
align = "center",
verticalAlign = "bottom",
y = 8,  # Ajustar la posición vertical de la leyenda
itemStyle = list(fontSize = "12px", fontWeight = "normal"),
labelFormat = "{name}: {percentage:.1f}%"
)%>%
hc_credits( #https://api.highcharts.com/highcharts/
enabled = TRUE,
text = "Citar como: Romina De León y Gimena del Rio, 2025. Análisis de revistas latinoamericanas en DOAJ.",
href = "https://github.com/rominicky/analisis-doaj",
itemStyle = list(fontSize = "8px", fontWeight = "normal"),
position = list(align = "left", x = 10, y = -5)  # <-- Esto alinea a la izquierda
)
saveWidget(paises_total, file = "paises_total-interactivo.html")
View(journal.select)
length(journal)
length(journal.select$title)
length(journal$title)
View(journal)
#américa latina
paises_total <- hchart(
filtered_data,
type = "pie",
hcaes(x = country, y = percentage),
dataLabels = list(enabled = TRUE),  # Deshabilitar etiquetas de datos
showInLegend = TRUE
) %>%
hc_title(text = paste0(
"<b>Porcentaje de las </b>",
sum(filtered_data$n),
"<b> publicaciones en América Latina</b>"
)) %>%
hc_subtitle(text = paste0("<i>Respecto a las", length(journal$title) ," publiacciones de todo el mundo</i>")) %>%
hc_exporting(
enabled = TRUE, # Habilitar exportación
filename = "paises_total"
) %>%
hc_plotOptions(
pie = list(
allowPointSelect = TRUE,
cursor = "pointer"
)
) %>%
hc_legend(
enabled = TRUE,
layout = "horizontal",
align = "center",
verticalAlign = "bottom",
y = 8,  # Ajustar la posición vertical de la leyenda
itemStyle = list(fontSize = "12px", fontWeight = "normal"),
labelFormat = "{name}: {percentage:.1f}%"
)%>%
hc_credits( #https://api.highcharts.com/highcharts/
enabled = TRUE,
text = "Citar como: Romina De León y Gimena del Rio, 2025. Análisis de revistas latinoamericanas en DOAJ.",
href = "https://github.com/rominicky/analisis-doaj",
itemStyle = list(fontSize = "8px", fontWeight = "normal"),
position = list(align = "left", x = 10, y = -5)  # <-- Esto alinea a la izquierda
)
saveWidget(paises_total, file = "paises_total-interactivo.html")
length(journal$title)
#américa latina
paises_total <- hchart(
filtered_data,
type = "pie",
hcaes(x = country, y = percentage),
dataLabels = list(enabled = TRUE),  # Deshabilitar etiquetas de datos
showInLegend = TRUE
) %>%
hc_title(text = paste0(
"<b>Porcentaje de las </b>",
sum(filtered_data$n),
"<b> publicaciones en América Latina</b>"
)) %>%
hc_subtitle(text = paste0("<i>Respecto a las", length(journal.select$title) ," publiacciones de todo el mundo</i>")) %>%
hc_exporting(
enabled = TRUE, # Habilitar exportación
filename = "paises_total"
) %>%
hc_plotOptions(
pie = list(
allowPointSelect = TRUE,
cursor = "pointer"
)
) %>%
hc_legend(
enabled = TRUE,
layout = "horizontal",
align = "center",
verticalAlign = "bottom",
y = 8,  # Ajustar la posición vertical de la leyenda
itemStyle = list(fontSize = "12px", fontWeight = "normal"),
labelFormat = "{name}: {percentage:.1f}%"
)%>%
hc_credits( #https://api.highcharts.com/highcharts/
enabled = TRUE,
text = "Citar como: Romina De León y Gimena del Rio, 2025. Análisis de revistas latinoamericanas en DOAJ.",
href = "https://github.com/rominicky/analisis-doaj",
itemStyle = list(fontSize = "8px", fontWeight = "normal"),
position = list(align = "left", x = 10, y = -5)  # <-- Esto alinea a la izquierda
)
saveWidget(paises_total, file = "paises_total-interactivo.html")
#américa latina
paises_total <- hchart(
filtered_data,
type = "pie",
hcaes(x = country, y = percentage),
dataLabels = list(enabled = TRUE),  # Deshabilitar etiquetas de datos
showInLegend = TRUE
) %>%
hc_title(text = paste0(
"<b>Porcentaje de las </b>",
sum(filtered_data$n),
"<b> publicaciones en América Latina</b>"
)) %>%
hc_subtitle(text = paste0("<i>Respecto a las ", length(journal.select$title) ," publiacciones de todo el mundo</i>")) %>%
hc_exporting(
enabled = TRUE, # Habilitar exportación
filename = "paises_total"
) %>%
hc_plotOptions(
pie = list(
allowPointSelect = TRUE,
cursor = "pointer"
)
) %>%
hc_legend(
enabled = TRUE,
layout = "horizontal",
align = "center",
verticalAlign = "bottom",
y = 8,  # Ajustar la posición vertical de la leyenda
itemStyle = list(fontSize = "12px", fontWeight = "normal"),
labelFormat = "{name}: {percentage:.1f}%"
)%>%
hc_credits( #https://api.highcharts.com/highcharts/
enabled = TRUE,
text = "Citar como: Romina De León y Gimena del Rio, 2025. Análisis de revistas latinoamericanas en DOAJ.",
href = "https://github.com/rominicky/analisis-doaj",
itemStyle = list(fontSize = "8px", fontWeight = "normal"),
position = list(align = "left", x = 10, y = -5)  # <-- Esto alinea a la izquierda
)
saveWidget(paises_total, file = "paises_total-interactivo.html")
total.journal <- length(journal.select$title)
total.journal
dir_output = setwd("C:/git/analisis-doaj/assets/plots/2025")
#en todo el mundo
journal.select %>%
group_by(language)%>%
count()%>%
filter(n >= 100 )%>%
mutate(language = reorder(language, n)) %>%
ggplot(aes(x = reorder(language, n), y = n, fill = language)) +
geom_col () + # si agrego , fill = "blue" cambio color
#scale_fill_manual(values = rainbow(length(unique(datos$language)))) +
scale_fill_viridis_d(option = "C" ) +
theme_minimal() +
theme(legend.position = "n") +
ylab("Número de veces que aparecen") +
xlab(NULL) +
ggtitle("Idiomas de publicación de revistas en todo el mundo") +
coord_flip() +
labs(caption = "Citar como: Romina De León y Gimena del Rio, 2025. Análisis de revistas latinoamericanas en DOAJ.")
#idioma por pais
journal.select %>%
group_by(country, language) %>%
count() %>%
ungroup() %>%
filter(n >= 50 & n <= 750) %>%
#mutate(language = reorder(language, n)) %>%  # idiomas por frecuencia
ggplot(aes(x = reorder(language, n), y = n, fill = country)) +  # n como valor numérico
geom_col() +
coord_flip() +
theme_minimal() +
theme(legend.position = "n"
#plot.caption = element_text(hjust = 0, face = "italic", size = 9),
#plot.margin = unit(c(1, 1, 2, 1), "cm")
) +
ylab("Número de publicaciones") +
#xlab(NULL) +
ggtitle("Publicaciones por idioma y país") +
labs(caption = "Citar como: Romina De León y Gimena del Rio, 2025. Análisis de revistas latinoamericanas en DOAJ.")
journal.select %>%
group_by(country, language) %>%
count() %>%
ungroup() %>%
filter(n >= 200 ) %>%
mutate(country = reorder_within(country, n, language)) %>%  # para que ordene dentro de cada panel
ggplot(aes(x = country, y = n, fill = country)) +
geom_col(show.legend = FALSE) +
coord_flip() +
facet_wrap(~ language, scales = "free_y") +  # un panel por idioma
scale_x_reordered() +  # necesario con reorder_within
theme_minimal() +
theme(
plot.caption = element_text(hjust = 0, face = "italic", size = 7),
strip.text = element_text(size = 7, face = "bold")
) +
xlab(NULL) +
ylab("Número de publicaciones, mínimo 200 publicaciones") +
scale_fill_viridis_d(option = "D") +
ggtitle("Publicaciones por país e idioma") +
labs(caption = "Citar como: Romina De León y Gimena del Rio, 2025. Análisis de revistas latinoamericanas en DOAJ.")
