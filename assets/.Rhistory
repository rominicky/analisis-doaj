url<- "https://raw.githubusercontent.com/rominicky/materiales/main/assets/Provincias.csv"
destino <- "./provincias.csv"
download.file(url, destino)
library("readr")
install.packages("readr")
install.packages("tidyverse")
library("readr")
provincias <- read_csv(destino)
library(tidyverse)
provincias <- read.csv('~/Provincias.csv')
View(provincias)
provincias <- provincias %>%
rename(Viviendas_particulares = Viviendas.particulares..2022.)
# Calculamos la media de viviendas particulares por provincia
media_Viviendas_particulares <- provincias %>%
group_by(Nombre.de.provincia) %>% #Agrupamos los datos por la columna Nombre.de.provincia.
summarise(media_Viviendas_particulares = mean(Viviendas_particulares, na.rm = TRUE)) #Calculamos la media de la columna Viviendas_particulares por cada provincia agrupada, generamos una nueva columna 'media_Viviendas_particulares
# Creamos el gráfico de viviendas particulares por provincias
ggplot(provincias, aes(x = reorder(Nombre.de.provincia, Viviendas_particulares), y = Viviendas_particulares)) + #indicamos que datos asignamos a cada eje
geom_bar(stat = "identity", na.rm = TRUE) + #el tipo de gráfico que realizaremos, podría
coord_flip() +  # Giramos el gráfico para mayor legibilidad
labs(title = "Viviendas particulares por Provincias argentinas", #indicamos las etiquetas
x = "Provincias",
y = "Viviendas particulares") +
theme_light()
provincias <- provincias %>%
rename(situacion_calle = Personas.en.situación.de.calle..vía.pública.)
# Calculo la media de personas en situación de calle por provincia
media_situacion_calle <- provincias %>%
group_by(Nombre.de.provincia) %>% #Agrupo los datos por la columna Nombre.de.provincia.
summarise(media_situacion_calle = mean(situacion_calle, na.rm = TRUE)) #Calculo la media de la columna situacion_calle por cada provincia agrupada, generamos una nueva columna 'media_situacion_calle'
# Creamos el gráfico de personas en situación de calle por provincias
ggplot(provincias, aes(x = reorder(Nombre.de.provincia, situacion_calle), y = situacion_calle)) + #indico que datos asignamos a cada eje
geom_bar(stat = "identity", na.rm = TRUE) + #el tipo de gráfico que realicé, podría
coord_flip() +  # Giro el gráfico para mayor legibilidad
labs(title = "Personas en situaciones de calle por Provincias argentinas", #indico las etiquetas
x = "Provincias",
y = "Cantidad de personas en situación de calle") +
theme_light() #indico el tema, ggplot tiene 8 temas, el genérico es minimal
setwd("E:/hd-git/analisis-doaj/assets")
# Configuración inicial
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
library(scico)
#otro gráfico
journal.amlat %>%
group_by(Publisher)%>%
count()%>%
filter(n>15)%>%
mutate(Publisher = reorder(Publisher, n)) %>%
ggplot(aes(x = reorder(Publisher, n), y = n, fill = Publisher)) +  # Ordenar x según la frecuencia -n
geom_col () + # si agrego , fill = "blue" cambio color
theme_minimal() +
theme(legend.position = "n") +
scale_color_scico_d(palette = "bilbao") +
ylab("Cantidad de revistas publicadas por") +
xlab(NULL) +
ggtitle("Editorial de publicación de revistas en América Latina",
subtitle = "Restringido a editoriales con más de 15 revistas") +
coord_flip() +
labs(caption = "Citar como: Romina De León, 2025. Análisis de revistas latinoamericanas en DOAJ.")
#ggsave(file.path(dir_output, "editorial_América Latina_min15.jpg", width = 3000, height = 1500, units = "px", dpi = 300))
journal.amlat %>%
group_by(license) %>%
count() %>%
filter(n >= 10) %>%
mutate(license = reorder(license, n)) %>%
ggplot(aes(x = reorder(license, n), y = n, fill = license)) +
geom_col() +
scale_fill_scico_d(palette = "lapaz") +
theme_minimal() +
theme(legend.position = "n") +  # debe ser "none", no "n"
ylab("Frecuencias") +
xlab("Tipo de licencias") +
ggtitle("Licencias utilizadas por revistas en América Latina") +
coord_flip() +
labs(caption = "Citar como: Romina De León, 2025. Análisis de revistas latinoamericanas en DOAJ.")
#ggsave(file.path(dir_output, "licencia_AmLatina_min5.png", width = 3000, height = 1500, units = "px", dpi = 300))
journal.amlat %>%
group_by(Review)%>%
count()%>%
filter(n>=5)%>%
mutate(Review = fct_reorder(Review, n)) %>%
ggplot(aes(x = reorder(Review, n), y = n, fill = Review)) +
geom_col () + # si agrego , fill = "blue" cambio color
scale_fill_scico_d(palette = "berlin") +
theme_minimal() +
theme(legend.position = "n") +
ylab("Frecuencia") +
xlab("Tipo de revisiones") +
ggtitle("Proceso de revisión para publicaciones para las revistas de América Latina") +
scale_color_scico_d(palette = "lajolla") +
coord_flip() +
labs(caption = "Citar como: Romina De León, 2025. Análisis de revistas latinoamericanas en DOAJ.")
#ggsave(file.path(dir_output, "revision_AmLatina_min10.png", width = 3000, height = 1500, units = "px", dpi = 300))
journal.amlat %>%
group_by(Subjects) %>%
count() %>%
filter(n > 10) %>%
mutate(Subjects = fct_reorder(Subjects, n)) %>%
ggplot(aes(x = reorder(Subjects, n), y = n, fill = Subjects)) +
geom_col() +
theme_minimal() +
theme(legend.position = "n") +
ylab("Frecuencia") +
xlab("Áreas") +
ggtitle("Áreas de publicación de revistas en América Latina",
subtitle = "Frecuencia mayor a 10") +
scale_fill_scico_d(palette = "lapaz") +
coord_flip() +
labs(caption = "Citar como: Romina De León, 2025. Análisis de revistas latinoamericanas en DOAJ.")
#ggsave(file.path(dir_output, "areas_amLatina_min10.jpg", width = 3000, height = 1500, units = "px", dpi = 300))
